diff --git a/taxonomy_access.info b/taxonomy_access.info
index 6cfc487..978f1eb 100644
--- a/taxonomy_access.info
+++ b/taxonomy_access.info
@@ -5,3 +5,4 @@ core = 7.x
 configure = admin/config/people/taxonomy_access
 
 files[] = taxonomy_access.test
+files[] = taxonomy_access_handler_field.inc
diff --git a/taxonomy_access.module b/taxonomy_access.module
index 64b48ee..90c0fef 100644
--- a/taxonomy_access.module
+++ b/taxonomy_access.module
@@ -1745,3 +1745,12 @@ function taxonomy_access_disable() {
     }
   }
 }
+
+/**
+ * Implements hook_views_api().
+ */
+function taxonomy_access_views_api() {
+  return array(
+    'api' => 3
+  );
+}
diff --git a/taxonomy_access_handler_field.inc b/taxonomy_access_handler_field.inc
new file mode 100644
index 0000000..8464184
--- /dev/null
+++ b/taxonomy_access_handler_field.inc
@@ -0,0 +1,52 @@
+<?php
+
+class taxonomy_access_handler_field_term_grants extends views_handler_field_prerender_list {
+  function init(&$view, &$options) {
+    parent::init($view, $options);
+    $this->additional_fields['taxonomy_access_tid'] = array(
+      'table' => 'taxonomy_term_data',
+      'field' => 'tid',
+    );
+  }
+
+  function query() {
+    $this->add_additional_fields();
+  }
+
+  function pre_render(&$values) {
+    $this->field_alias = $this->aliases['taxonomy_access_tid'];
+    $tids = array();
+    foreach ($values as $result) {
+      if (!empty($result->{$this->aliases['taxonomy_access_tid']})) {
+        $tids[] = $result->{$this->aliases['taxonomy_access_tid']};
+      }
+    }
+
+    if ($tids) {
+      // TODO: Rewrite query to pull in default grants as well.
+      $result = db_query('SELECT t.tid, t.rid, r.name, grant_view FROM {taxonomy_access_term} t JOIN {role} r ON r.rid = t.rid WHERE t.tid IN (' . implode(',', $tids) . ')');
+
+      foreach ($result as $grant) {
+        if ($grant->grant_view & TAXONOMY_ACCESS_NODE_ALLOW) {
+          $this->items[$grant->tid][$grant->rid]['rid'] = $grant->rid;
+          $this->items[$grant->tid][$grant->rid]['name'] = $grant->name;
+        }
+      }
+    }
+  }
+
+  function render_item($count, $item) {
+    return $item['name'];
+  }
+
+  function document_self_tokens(&$tokens) {
+    $tokens['[' . $this->options['id'] . '-rid' . ']'] = t('The role ID.');
+    $tokens['[' . $this->options['id'] . '-name' . ']'] = t('The role name.');
+  }
+
+  function add_self_tokens(&$tokens, $item) {
+    foreach(array('rid', 'name') as $token) {
+      $tokens['[' . $this->options['id'] . '-' . $token . ']'] = isset($item[$token]) ? $item[$token] : '';
+    }
+  }
+}
