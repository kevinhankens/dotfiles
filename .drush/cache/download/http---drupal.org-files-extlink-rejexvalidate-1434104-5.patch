diff --git a/extlink.install b/extlink.install
index d3e3f64..119cbfb 100644
--- a/extlink.install
+++ b/extlink.install
@@ -8,3 +8,18 @@ function extlink_install() {
   // Weight needs to be 1 for compatibility with SpamSpan.
   db_query("UPDATE {system} SET weight = 1 WHERE name = 'extlink'");
 }
+
+/**
+* Implementation of hook_uninstall().
+*/
+function extlink_uninstall() {
+  // Delete the external links variables
+  variable_del('extlink_target');
+  variable_del('extlink_class');
+  variable_del('extlink_subdomains');
+  variable_del('extlink_exclude');
+  variable_del('extlink_include');
+  variable_del('extlink_alert');
+  variable_del('extlink_alert_text');
+  variable_del('extlink_mailto_class');
+}
diff --git a/extlink.module b/extlink.module
index fb559e7..5c26899 100644
--- a/extlink.module
+++ b/extlink.module
@@ -138,3 +138,26 @@ function extlink_admin_settings() {
 
   return system_settings_form($form);
 }
+
+function extlink_admin_settings_validate($form, &$form_state) {
+  // Check if the exclude pattern is a valid regular expression
+  if ($exclude = $form_state['values']['extlink_exclude']) {
+    // Testing the regex via replace
+    $regexeval = @preg_replace('/' . $exclude . '/', '', 'Lorem ipsum');
+    // If the regex returns NULL, then throw an error and reset the variable
+    if ($regexeval === NULL) {
+      form_set_error('extlink_exclude', t('Invalid regular expression.'));
+      variable_set('extlink_exclude', '');
+    }
+  }
+  // Check if the include pattern is a valid regular expression
+  if ($include = $form_state['values']['extlink_include']) {
+  // Testing the regex via replace
+  $regexeval = @preg_replace('/' . $include . '/', '', 'Lorem ipsum');
+    // If the regex returns NULL, then throw an error and reset the variable
+    if ($regexeval === NULL) {
+      form_set_error('extlink_include', t('Invalid regular expression.'));
+      variable_set('extlink_include', '');
+    }
+  }
+}
