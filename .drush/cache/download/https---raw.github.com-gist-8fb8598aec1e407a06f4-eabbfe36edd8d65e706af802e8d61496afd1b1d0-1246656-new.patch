
diff --git a/fivestar.module b/fivestar.module
index e3e370c..e6e0023 100644
--- a/fivestar.module
+++ b/fivestar.module
@@ -21,32 +21,6 @@ function fivestar_help($path, $arg) {
 }
 
 /**
- * Implementation of hook_menu().
- */
-function fivestar_menu() {
-  $items = array();
-  $items['admin/config/content/fivestar'] = array(
-    'title'             => 'Fivestar',
-    'description'       => 'Configure site-wide widgets used for Fivestar rating.',
-    'page callback'     => 'drupal_get_form',
-    'page arguments'    => array('fivestar_settings'),
-    'access callback'   => 'user_access',
-    'access arguments'  => array('administer site configuration'),
-    'type'              => MENU_NORMAL_ITEM,
-    'file'              => 'includes/fivestar.admin.inc',
-  );
-  $items['fivestar/preview/color'] = array(
-    'page callback'     => 'fivestar_preview_color',
-    'access callback'   => 'user_access',
-    'access arguments'  => array('administer site configuration'),
-    'type'              => MENU_CALLBACK,
-    'file'              => 'includes/fivestar.color.inc',
-  );
-
-  return $items;
-}
-
-/**
  * Implementation of hook_permission().
  *
  * Exposes permissions for rating content.
diff --git a/includes/fivestar.admin.inc b/includes/fivestar.admin.inc
deleted file mode 100644
index cf30875..0000000
--- a/includes/fivestar.admin.inc
+++ /dev/null
@@ -1,44 +0,0 @@
-<?php
-
-/**
- * @file
- * Configuration pages for Fivestar module.
- */
-
-/**
- * Callback function for admin/settings/fivestar. Display the settings form.
- */
-function fivestar_settings($form, $form_state) {
-
-  $form['tags'] = array(
-    '#tree' => FALSE,
-    '#type' => 'fieldset',
-    '#title' => t('Voting tags'),
-    '#description' => t('Choose the voting tags that will be available for node rating. A tag is simply a category of vote. If you only need to rate one thing per node, leave this as the default "vote".'),
-    '#weight' => 3,
-   );
-
-  $form['tags']['tags'] = array(
-    '#type' => 'textfield',
-    '#title' => t('Tags'),
-    '#default_value' => variable_get('fivestar_tags', 'vote'),
-    '#required' => TRUE,
-    '#description' => t('Separate multiple tags with commas.'),
-   );
-
-  $form['#submit'][] ='fivestar_settings_submit';
-
-  $form['submit'] = array(
-    '#type' => 'submit',
-    '#value' => t('Save configuration'),
-    '#weight' => 45,
-  );
-
-  return $form;
-}
-
-function fivestar_settings_submit($form, &$form_state) {
-  drupal_set_message(t('Your settings have been saved.'));
-  // TODO We could delete all variables for removed tags
-  variable_set('fivestar_tags', $form_state['values']['tags']);
-}
diff --git a/includes/fivestar.field.inc b/includes/fivestar.field.inc
index 40c99ea..70fcee1 100644
--- a/includes/fivestar.field.inc
+++ b/includes/fivestar.field.inc
@@ -46,14 +46,19 @@ function fivestar_form_field_ui_field_edit_form_alter(&$form, $form_state) {
  * Implementation of hook_field_settings_form().
  */
 function fivestar_field_settings_form($field, $instance) {
+  // Fivestar fields are automatically assigned a voting category matching their field name,
+  // minus the 'field_' prefix.
+  // Note: There is no scenario where (a) axis should not be set or (b)  where the axis should be anything
+  // other than the field name. But I'm not 100% sure this will not cause problems for legacy sites running on the
+  // pre-release 7.x-2.x branch of Fivestar. Just in case, check if axis has been set and provide the field name
+  // as a default to fall back on. (bryanhirsch, 8/11/11)
+  $axis = substr($field['field_name'], 6);
   $form['axis'] = array(
-    '#type' => 'select',
-    '#required' => TRUE,
+    '#type' => 'textfield',
     '#title' => 'Voting Tag',
-    '#options' => fivestar_get_tags(),
-    '#description' => t('The tag this rating will affect. Enter a property on which that this rating will affect, such as <em>quality</em>, <em>satisfaction</em>, <em>overall</em>, etc.'),
-    '#default_value' => isset($field['settings']['axis']) ? $field['settings']['axis'] : '',
-    '#disabled' => field_has_data($field),
+    '#disabled' => TRUE,
+    '#value' => $axis,
+    '#description' => t('Fivestar fields automatically create a corresponding "voting tag". This is only relevant if you are using other Drupal voting modules to collect votes about the same thing.'),
   );
 
   return $form;
@@ -68,7 +73,7 @@ function fivestar_field_instance_settings_form($field, $instance) {
     '#options' => drupal_map_assoc(range(1, 10)),
     '#default_value' => isset($instance['settings']['stars']) ? $instance['settings']['stars'] : 5,
   );
-  
+
   $form['allow_clear'] = array(
     '#type' => 'checkbox',
     '#title' => t('Allow users to cancel their ratings.'),
@@ -85,7 +90,7 @@ function fivestar_field_instance_settings_form($field, $instance) {
     '#description' => t('The voting target will make the value of this field cast a vote on another node. Use node reference fields module to create advanced reviews. Use the Parent Node Target when using fivestar with comments. More information available on the <a href="http://drupal.org/handbook/modules/fivestar">Fivestar handbook page</a>.'),
     '#access' => (count($options) > 1 && $instance['widget']['type'] != 'exposed'),
   );
-  
+
   return $form;
 }
 
@@ -223,7 +228,7 @@ function fivestar_field_widget_settings_form($field, $instance) {
 }
 
 function fivestar_previews_expand($element) {
-  
+
   foreach (element_children($element) as $css) {
     $vars = array(
       'css' => $css,
@@ -231,7 +236,7 @@ function fivestar_previews_expand($element) {
     );
     $element[$css]['#description'] = theme('fivestar_preview_widget', $vars);
   }
-  
+
   return $element;
 }
 
@@ -281,7 +286,7 @@ function fivestar_field_widget_form(&$form, &$form_state, $field, $instance, $la
       'text' => 'none',
       'widget' => $widget,
     );
-    
+
     $element['rating'] = array(
       '#type'=> 'fivestar',
       '#title' => isset($instance['label']) ? $instance['label'] : FALSE,
@@ -336,7 +341,7 @@ function fivestar_field_formatter_info() {
 function fivestar_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
   $display = $instance['display'][$view_mode];
   $settings = $display['settings'];
-  
+
   if ($display['type'] != 'fivestar_formatter_default') {
     return;
   }
@@ -352,7 +357,7 @@ function fivestar_field_formatter_settings_form($field, $instance, $view_mode, $
   );
 
   $widgets = module_invoke_all('fivestar_widgets');
-  
+
   $element['widget']['fivestar_widget'] = array(
     '#type' => 'radios',
     '#options' => array('default' => t('Default')) + $widgets,
@@ -421,7 +426,7 @@ function fivestar_field_formatter_settings_summary($field, $instance, $view_mode
       '@text' => strtolower($settings['text'])));
     return $summary;
   }
-  
+
   $summary = t("Style: @widget, Stars display: @style, Text display: @text", array(
     '@widget' => isset($widgets[$settings['widget']['fivestar_widget']]) ? $widgets[$settings['widget']['fivestar_widget']] : t('default'),
     '@style' => strtolower($settings['style']),
@@ -466,9 +471,7 @@ function fivestar_field_formatter_view($entity_type, $entity, $field, $instance,
               && $display['type'] == 'fivestar_formatter_default'
               && $display['settings']['expose']) ? TRUE : FALSE;
   if ($is_form) {
-    // TODO. Get rid of voting categories setting, then change this so
-    // axis = field name.
-    $tag = (isset($field['settings']['axis'])) ? $field['settings']['axis'] : 'vote';
+    $tag = (isset($field['settings']['axis'])) ? $field['settings']['axis'] : substr($field['field_name'], 6);
     list($id, $vid, $bundle) = entity_extract_ids($entity_type, $entity);
     $settings = _fivestar_custom_widget_settings($entity_type, $instance, $display, $id, $tag, $widget);
     // Store entity and field data for later reuse.
@@ -673,8 +676,13 @@ function fivestar_field_prepare_view($entity_type, $entities, $field, $instances
     // Populating the $items[$id] array even for items with no value forces
     // the render system to output a widget.
     if ($instances[$id]['widget']['type'] == 'exposed') {
-      // If the widget type is exposed then we want to look up the voting api values.
-      $tag = $field['settings']['axis'];
+      // Fivestar fields are automatically assigned a voting category matching their field name,
+      // minus the 'field_' prefix.
+      // Note: There is no scenario where (a) axis should not be set or (b)  where the axis should be anything
+      // other than the field name. But I'm not 100% sure this will not cause problems for legacy sites running on the
+      // pre-release 7.x-2.x branch of Fivestar. Just in case, check if axis has been set and provide the field name
+      // as a default to fall back on. (bryanhirsch, 8/11/11)
+      $tag = (isset($field['settings']['axis'])) ? $field['settings']['axis'] : substr($field['field_name'], 6);
       $votes = fivestar_get_votes($entity_type, $id, $tag);
       $values['user'] = isset($votes['user']['value']) ? $votes['user']['value'] : 0;
       $values['average'] = isset($votes['average']['value']) ? $votes['average']['value'] : 0;
