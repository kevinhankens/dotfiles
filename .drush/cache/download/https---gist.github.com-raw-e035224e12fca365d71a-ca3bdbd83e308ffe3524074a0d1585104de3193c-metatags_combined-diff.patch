diff --git a/metatag.metatag.inc b/metatag.metatag.inc
index d9cf79e..1d524dd 100644
--- a/metatag.metatag.inc
+++ b/metatag.metatag.inc
@@ -97,28 +97,27 @@ function metatag_metatag_info() {
   $info['groups']['advanced'] = array(
     'label' => t('Advanced'),
     'form' => array(
-      '#weight' => 90,
+      '#weight' => 110,
     ),
   );
-
   $info['tags']['description'] = array(
     'label' => t('Description'),
-    'description' => t("A brief and concise summary of the page's content, preferrably 150 characters or less. The description meta tag may be used by search engines to display a snippet about the page in search results."),
+    'description' => t("A brief and concise summary of the page's content, preferably 150 characters or less. Google and other search engines display this information in search results."),
     'class' => 'DrupalTextMetaTag',
     'form' => array(
-      '#type' => 'textarea',
-      '#rows' => 2,
+      '#type' => 'textfield',
       '#wysiwyg' => FALSE,
+      '#size' => 120,
     ),
   );
   $info['tags']['keywords'] = array(
     'label' => t('Keywords'),
-    'description' => t("A comma-separated list of keywords about the page. This meta tag is <em>not</em> supported by most search engines."),
+    'description' => t("A comma-separated list of words that describe the content. <em>Not</em> supported by most search engines."),
     'class' => 'DrupalTextMetaTag',
   );
   $info['tags']['title'] = array(
     'label' => t('Title'),
-    'description' => t("The text to display in the title bar of a visitor's web browser when they view this page. This meta tag may also be used as the title of the page when a visitor bookmarks or favorites this page."),
+    'description' => t("The text displayed in a visitor's web browser title tab, as well as bookmarks and favorites."),
     'class' => 'DrupalTitleMetaTag',
   );
 
@@ -131,9 +130,9 @@ function metatag_metatag_info() {
       '#options' => array(
         'noindex' => t('Prevent search engines from indexing this page.'),
         'nofollow' => t('Prevent search engines from following links on this page.'),
-        'noarchive' => t('Prevent a cached copy of this page from being available in the search results.'),
-        'nosnippet' => t('Prevents a description from appearing below the page in the search results, as well as prevents caching of the page.'),
-        'noodp' => t('Blocks the <a href="@odp-url">Open Directory Project</a> description of the page from being used in the description that appears below the page in the search results.', array('@odp-url' => 'http://www.dmoz.org/')),
+        'noarchive' => t('Prevents cached copies of this page from appearing in search results.'),
+        'nosnippet' => t('Prevents descriptions from appearing in search results, and prevents page caching.'),
+        'noodp' => t('Blocks the !opendirectory description from appearing in search results.', array('!opendirectory' => l('Open Directory Project', 'http://www.dmoz.org/'))),
       ),
     ),
     'group' => 'advanced',
@@ -151,7 +150,7 @@ function metatag_metatag_info() {
   );
   $info['tags']['copyright'] = array(
     'label' => t('Copyright'),
-    'description' => t("Details a copyright, trademark, patent, or other information that pertains to intellectual property about this page. Note that this will not automatically protect your site's content or your intellectual property."),
+    'description' => t("Details about intellectual property, such as copyright or trademarks. Does not automatically protect your site's content or intellectual property."),
     'class' => 'DrupalTextMetaTag',
     'group' => 'advanced',
   );
@@ -159,13 +158,13 @@ function metatag_metatag_info() {
   // Link tags.
   $info['tags']['canonical'] = array(
     'label' => t('Canonical URL'),
-    'description' => t("Tells search engines where the preferred location or URL is for this page to help eliminate self-created duplicate content for search engines."),
+    'description' => t("Preferred page location or URL to help eliminate duplicate content for search engines."),
     'class' => 'DrupalLinkMetaTag',
     'group' => 'advanced',
   );
   $info['tags']['shortlink'] = array(
     'label' => t('Shortlink URL'),
-    'description' => '',
+    'description' => t('A brief URL, often created by a URL shortening service.'),
     'class' => 'DrupalLinkMetaTag',
     'group' => 'advanced',
   );
diff --git a/metatag.module b/metatag.module
index 3b1eea2..a71db7e 100644
--- a/metatag.module
+++ b/metatag.module
@@ -454,6 +454,11 @@ function metatag_metatags_form(array &$form, $instance, array $metatags = array(
     '#metatag_defaults' => $options['defaults'],
   );
 
+  $form['metatags']['intro_text'] = array(
+    '#markup' => '<p>' .t('Configure the meta tags below.  Use tokens to avoid redundant metadata and search engine penalization.  For example,  a \'keyword\' value of "example" applies to all content using this template.'),
+    '#weight' => -10,
+  );
+
   // Only support vertical tabs if there is a vertical tab element.
   foreach (element_children($form) as $key) {
     if (isset($form[$key]['#type']) && $form[$key]['#type'] == 'vertical_tabs') {
@@ -510,8 +515,16 @@ function metatag_metatags_form(array &$form, $instance, array $metatags = array(
     }
   }
 
+  // Put tokens in a fieldset.
+  $form['metatags']['token_group'] = array(
+    '#type' => 'fieldset',
+    '#title' => t('Available tokens'),
+    '#collapsible' => TRUE,
+    '#collapsed' => TRUE,
+  );
+
   // Show the list of available tokens.
-  $form['metatags']['tokens'] = array(
+  $form['metatags']['token_group']['tokens'] = array(
     '#theme' => 'token_tree',
     '#token_types' => $options['token types'],
     '#weight' => 100,
diff --git a/metatag_opengraph/metatag_opengraph.metatag.inc b/metatag_opengraph/metatag_opengraph.metatag.inc
index 0bdd99d..ff546e8 100644
--- a/metatag_opengraph/metatag_opengraph.metatag.inc
+++ b/metatag_opengraph/metatag_opengraph.metatag.inc
@@ -55,11 +55,12 @@ function metatag_opengraph_metatag_config_default_alter(array &$configs) {
 function metatag_opengraph_metatag_info() {
   $info['groups']['open-graph'] = array(
     'label' => t('Open Graph'),
+    'description' => t('Add !opengraph meta tags to create "rich" social objects and help Facebook understand how to interpret this content.', array('!opengraph'=> l('Open Graph', 'http://opengraphprotocol.org'))),
   );
 
   $info['tags']['og:title'] = array(
     'label' => t('Open Graph title'),
-    'description' => t('The title of your object as it should appear within the graph, e.g., <em>The Rock</em>.'),
+    'description' => t('The object title that appears in the graph, e.g., !example.', array('!example' => '<em>Citizen Kane</em>')),
     'class' => 'DrupalTextMetaTag',
     'group' => 'open-graph',
     'element' => array(
@@ -85,7 +86,7 @@ function metatag_opengraph_metatag_info() {
   //}
   $info['tags']['og:image'] = array(
     'label' => t('Open Graph image'),
-    'description' => t('An image URL which should represent your object within the graph. The image must be at least 50px by 50px and have a maximum aspect ratio of 3:1. We support PNG, JPEG and GIF formats.'),
+    'description' => t('The image URL that represents the object in the graph. Must be at least 50px with a maximum aspect ratio of 3:1.  Supported formats are .png, .jpeg, and .gif.'),
     'class' => 'DrupalTextMetaTag',
     'group' => 'open-graph',
     'element' => array(
@@ -94,7 +95,7 @@ function metatag_opengraph_metatag_info() {
   );
   $info['tags']['og:url'] = array(
     'label' => t('Open Graph URL'),
-    'description' => t('The canonical URL of your object that will be used as its permanent ID in the graph, e.g., <em>http://www.imdb.com/title/tt0117500/</em>.'),
+    'description' => t('The canonical URL that permanently identifies the object in the graph, e.g., !example.', array('!example' => '<em>http://www.imbd/title/tt0117500/</em>')),
     'class' => 'DrupalTextMetaTag',
     'group' => 'open-graph',
     'element' => array(
diff --git a/metatag_ui/metatag_ui.admin.inc b/metatag_ui/metatag_ui.admin.inc
index 5934935..9e47c28 100644
--- a/metatag_ui/metatag_ui.admin.inc
+++ b/metatag_ui/metatag_ui.admin.inc
@@ -173,7 +173,6 @@ function metatag_ui_config_overview() {
     ),
     '#rows' => $rows,
     '#empty' => t('No meta tag defaults available yet.'),
-    '#caption' => '<div class="js-show">' . t('To view a summary of the default meta tags and the inheritance, click on a meta tag type.') . '</div>',
     '#attributes' => array(
       'class' => array('metatag-config-overview'),
     ),
diff --git a/metatag_ui/metatag_ui.admin.js b/metatag_ui/metatag_ui.admin.js
index f278226..936ea2f 100644
--- a/metatag_ui/metatag_ui.admin.js
+++ b/metatag_ui/metatag_ui.admin.js
@@ -5,8 +5,15 @@ Drupal.behaviors.metatagUIConfigListing = {
     // Hide elements to be visible if JavaScript is enabled.
     $('.js-show').show();
 
+    //make the leaf arrow clickable
+    $('.metatag-config-label').hover(function(){
+      $(this).css({'cursor':'pointer'});
+    }).click(function(){
+      $(this).find('a.toggle-details', context).trigger('click');
+    });
+
     // Show or hide the summary
-    $('table.metatag-config-overview a.toggle-details', context).click(function() {
+    $('table.metatag-config-overview a.toggle-details', context).click(function(event) {
       $(this).parent('div').siblings('div.metatag-config-details').each(function() {
         if ($(this).hasClass('js-hide')) {
           $(this).slideDown('slow').removeClass('js-hide');
@@ -23,6 +30,10 @@ Drupal.behaviors.metatagUIConfigListing = {
       else {
         $(this).parent('div').removeClass('expanded').addClass('collapsed');
       }
+      //this event may be triggered by a parent element click -
+      //so we don't want the click to bubble up otherwise we get recursive click
+      //events
+      event.stopPropagation();
     });
   }
 }
diff --git a/metatag_ui/metatag_ui.module b/metatag_ui/metatag_ui.module
index f5505be..b84317b 100644
--- a/metatag_ui/metatag_ui.module
+++ b/metatag_ui/metatag_ui.module
@@ -14,7 +14,7 @@ function metatag_ui_ctools_plugin_directory($module, $plugin) {
  */
 function metatag_ui_help($path, $arg) {
   if ($path == 'admin/config/search/metatags') {
-    // @todo Provide help text for the configuration UI.
+    return '<p>' . t('\'Global\' metatags apply meta data values to content, users, taxonomy terms and views.  Override and edit the defaults below, or create your own custom templates. Apply your templates to all users, or all views, etc., or to a subset of each, for example, for articles only or a specific type of user.') . '</div>';
   }
 }
 
@@ -24,7 +24,7 @@ function metatag_ui_help($path, $arg) {
 function metatag_ui_menu() {
   $items['admin/config/search/metatags'] = array(
     'title' => 'Meta tags',
-    'description' => 'Configure meta tag defaults.',
+    'description' => 'Configure meta tag defaults. Meta tags are used to provide structured metadata about a Web page',
     'page callback' => 'metatag_ui_config_overview',
     'access arguments' => array('administer meta tags'),
     'file' => 'metatag_ui.admin.inc',
@@ -35,7 +35,7 @@ function metatag_ui_menu() {
     'weight' => -10,
   );
   $items['admin/config/search/metatags/config/add'] = array(
-    'title' => 'Add a meta tag default',
+    'title' => 'Add a meta tag template',
     'page callback' => 'drupal_get_form',
     'page arguments' => array('metatag_ui_config_add_form'),
     'access arguments' => array('administer meta tags'),
