diff --git a/webform_alt_ui.module b/webform_alt_ui.module
index 387fe15..9a06a05 100644
--- a/webform_alt_ui.module
+++ b/webform_alt_ui.module
@@ -1259,20 +1259,11 @@ function webform_alt_ui_pre_process_preview($form) {
  *
  * This lets us tie in a form in the page generation process.
  */
-function webform_alt_ui_results_submissions($node, $user_filter, $pager_count) {
-  // This callback is invoked by node/NID/webform-results and by
-  // node/NID/submissions. The latter is available to people who may not have
-  // access to view all submissions for this webform, so protect the CSV file
-  // accordingly.
-  // @todo Might be a UI improvement for the form generated from
-  //   node/NID/submissions to trigger a CSV file that contains the current
-  //   user's submissions only, so that it matches what is displayed on the
-  //   page. However, webform_results_download() does not currently support
-  //   filters.
-  $form = webform_results_access($node) ? drupal_get_form('webform_alt_ui_result_buttons', $node) : array();
+function webform_alt_ui_results_submissions($node, $user_filter, $pager_count, $extra_filters = array()) {
+  $form = drupal_get_form('webform_alt_ui_result_buttons', $node, $user_filter, $extra_filters);
 
   module_load_include('inc', 'webform', 'includes/webform.report');
-  $page = webform_results_submissions($node, $user_filter, $pager_count);
+  $page = webform_results_submissions($node, $user_filter, $pager_count, $extra_filters);
 
   // Line up the page components in order.
   return array(array('#type' => 'markup', '#markup' => $page), $form);
@@ -1281,9 +1272,10 @@ function webform_alt_ui_results_submissions($node, $user_filter, $pager_count) {
 /**
  * Form for our overriden webforms result page.
  */
-function webform_alt_ui_result_buttons($form, &$form_state, $node) {
-  return array(
+function webform_alt_ui_result_buttons($form, &$form_state, $node, $user_filter, $extra_filters) {
+  $form = array(
     '#node' => $node,
+    '#user_filter' => $user_filter,
     'buttons' => array(
       'download' => array(
         '#type' => 'submit',
@@ -1292,21 +1284,37 @@ function webform_alt_ui_result_buttons($form, &$form_state, $node) {
       'clear' => array(
         '#type' => 'submit',
         '#value' => t('Clear'),
+        // @todo At some point, allow the user to clear just his or her own
+        //   submissions. Until then, remove the Clear button from the page
+        //   where the user is only viewing own submissions.
+        '#access' => !$user_filter,
       ),
     )
   );
+
+  $form_state['extra_filters'] = $extra_filters;
+
+  return $form;
 }
 
 /**
  * Form submission for our overriden webforms result page.
  */
 function webform_alt_ui_result_buttons_submit($form, &$form_state) {
-  if ($form_state['values']['op'] == $form_state['values']['clear']) {
-    $form_state['redirect'] = 'node/' . $form['#node']->nid . '/webform-results/clear';
-  }
-  elseif ($form_state['values']['op'] == $form_state['values']['download']) {
-    form_load_include($form_state, 'inc', 'webform', 'includes/webform.report');
-    webform_results_download($form['#node']);
+  global $user;
+
+  if (!empty($form_state['values']['op'])) {
+    if ($form_state['values']['op'] == $form_state['values']['clear']) {
+      $form_state['redirect'] = 'node/' . $form['#node']->nid . '/webform-results/clear';
+    }
+    elseif ($form_state['values']['op'] == $form_state['values']['download']) {
+      form_load_include($form_state, 'inc', 'webform', 'includes/webform.report');
+      $extra_filters = isset($form_state['extra_filters']) ? $form_state['extra_filters'] : array();
+      if ($form['#user_filter']) {
+        $extra_filters['uid'] = $user->uid;
+      }
+      webform_results_download($form['#node'], 'delimited', array(), $extra_filters);
+    }
   }
 }
 
